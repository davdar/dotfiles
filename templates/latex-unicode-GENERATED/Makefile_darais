# `make`         : build the default style (e.g., `dev`)
# `make <style>` : build a non-default style
# `make again`   : rebuild once and *don't* rebuild the bib
# `make twice`   : rebuild twice and *don't* rebuild the bib
# `make thrice`  : rebuild thrice and *don't* rebuild the bib
# `make rebib`   : rebuild and *do* rebuild the bib




##########
# CONFIG #
##########

#--------#
# STYLES #
#--------#

# `make all` will call `make $X` for $X in $(ALL_STYLES)
ALL_STYLES  ?= dev final

# `make` (default target) will call `make $(STYLE)`
STYLE       ?= dev

# initialize latex variables from $(STYLE)
#
# INTERNAL: if YES, this is an internal copy, e.g., shows comments
# EXTENDED: if YES, include all extra content, e.g., appendicies
# HIDENAME: if YES, this copy should hide author identities
#
# respective latex variables:
#
# \isinternal
# \isextended
# \isnoauthor
#
ifeq ($(STYLE), dev)
  INTERNAL ?= 1
  EXTENDED ?= 1
  HIDENAME ?= 0
else ifeq ($(STYLE), final)
  INTERNAL ?= 0
  EXTENDED ?= 1
  BLINDIDS ?= 0
else ifeq ($(STYLE), final-anon)
  INTERNAL ?= 0
  EXTENDED ?= 1
  HIDENAME ?= 1
else ifeq ($(STYLE), final-short)
  INTERNAL ?= 0
  EXTENDED ?= 0
  HIDENAME ?= 0
else ifeq ($(STYLE), final-anon-short)
  INTERNAL ?= 0
  EXTENDED ?= 0
  HIDENAME ?= 1
else
  INTERNAL ?= 1
  EXTENDED ?= 1
  HIDENAME ?= 0
endif

#---------------#
# FINDING FILES #
#---------------#

# the "main" `*.tex` input source is `$(MAIN_SRC).tex`
MAIN_SRC    ?= 00-main

# when generating an ouput PDF, name it `$(MAIN_OUT).pdf`
MAIN_OUT    ?= main

# `*.tex` input source files live in `./$(TEX_SRC_DIR)/`
TEX_SRC_DIR ?= tex

# import other `*.tex` files as `\input{$(TEX_DST_DIR)/<foo>}`
TEX_DST_DIR ?= .


# similar to above but for `*.bib`, â€¦, `*.bst`
BIB_SRC_DIR ?= bib
BIB_DST_DIR ?= .

IMG_SRC_DIR ?= img
IMG_DST_DIR ?= .

PDF_SRC_DIR ?= pdf
PDF_DST_DIR ?= .

STY_SRC_DIR ?= sty
CLS_SRC_DIR ?= cls
BST_SRC_DIR ?= bst

#-------------------#
# SED PREPROCESSING #
#-------------------#

# `<foo.tex>` files that live in `./$(GEN_SRC_DIR)/` will be 
# - preprocessed with `sed` 
# - then renamed to `<foo$(GEN_SUFFIX).tex>
# - then copied to `./$(TEX_SRC_DIR)/` 
# (e.g., so overleaf can see sed-preprocessed files)
GEN_SRC_DIR ?= gen
GEN_SUFFIX  ?= __GEN

# use `*.sed` in $(SED_DIR) when preprocessing `*.tex` (and maybe `*.bib`) files
SED_DIR     ?= sed

# during `sed` preprocessing, stage files in `./$(STG_DIR)/`
STG_DIR     ?= stg

# before building with `pdflatex`, stage files in `./$(OUT_DIR)/`
OUT_DIR     ?= out

#---------------#
# AUTO DBLP BIB #
#---------------#

# look for the `dblp.py` script in `$(SCRIPTS_DIR)`
SCRIPTS_DIR ?= scripts

# include auto dblp bib as `\addbibresource{$(DBLP_BIB)}`
DBLP_BIB    ?= dblp.bib

# use $(CACHE_DIR) to cache downloaded bib entries
CACHE_DIR   ?= __cache

# if nonempty, generate a copy of $(DBLP_BIB) in $(BIB_SRC_DIR) 
# (e.g., so overleaf can find automatically generated bib files)
DBLP_COPY   ?=     # set to empty string for false

# if nonempty, preprocess all `*.tex` files with `sed`
SED_TEX     ?= YES # set to empty string for false

# if nonempty, preprocess all `*.bib` files with `sed`
SED_BIB     ?=     # set to empty string for false

#----------#
# COMMANDS #
#----------#

# use `$(LATEX) <foo.tex>` when compiling <foo.tex>
LATEX       ?= pdflatex # xelatex lualatex

# use `$(BIBTEX) <foo>` when processing bibliography for <foo>
BIBTEX      ?= biber # bibtex bibtex8 touch

# call `pdflatex $(LATEX_CMD)` when building a PDF
LATEX_CMD := \
  \\def\\isinternal{$(INTERNAL)} \
  \\def\\isextended{$(EXTENDED)} \
  \\def\\ishidename{$(HIDENAME)} \
  \\input{$(TEX_DST_DIR)/$(MAIN_SRC).tex}

#########
# GLOBS #
#########

GEN_SRC_FILES := $(shell find -L * -type d -name '$(GEN_SRC_DIR)' -maxdepth 0 -exec find -L {} -type f -name '*.tex' \;)
GEN_OUT_FILES := $(patsubst %.tex,%$(GEN_SUFFIX).tex,$(patsubst $(GEN_SRC_DIR)/%,$(TEX_SRC_DIR)/%,$(GEN_SRC_FILES)))

TEX_SRC_FILES := $(shell find -L * -type d -name '$(TEX_SRC_DIR)' -maxdepth 0 -exec find -L {} -type f -name '*.tex' \;) $(GEN_OUT_FILES)
TEX_STG_FILES := $(patsubst $(TEX_SRC_DIR)/%,$(STG_DIR)/$(TEX_DST_DIR)/%,$(TEX_SRC_FILES))

STY_SRC_FILES := $(wildcard $(STY_SRC_DIR)/*.sty)
STY_STG_FILES := $(patsubst $(STY_SRC_DIR)/%,$(STG_DIR)/%,$(STY_SRC_FILES))

BIB_SRC_FILES := $(filter-out $(BIB_SRC_DIR)/$(DBLP_BIB),$(wildcard $(BIB_SRC_DIR)/*.bib))
BIB_STG_FILES := $(patsubst $(BIB_SRC_DIR)/%,$(STG_DIR)/$(BIB_DST_DIR)/%,$(BIB_SRC_FILES)) $(STG_DIR)/$(BIB_DST_DIR)/$(DBLP_BIB)

CLS_SRC_FILES := $(wildcard $(CLS_SRC_DIR)/*.cls)
CLS_STG_FILES := $(patsubst $(CLS_SRC_DIR)/%,$(STG_DIR)/%,$(CLS_SRC_FILES))

BST_SRC_FILES := $(wildcard $(BST_SRC_DIR)/*.bst)
BST_STG_FILES := $(patsubst $(BST_SRC_DIR)/%,$(STG_DIR)/%,$(BST_SRC_FILES))

IMG_SRC_FILES := $(shell find -L $(IMG_SRC_DIR) -type f -name '*.jpg' -o -name '*.png')
IMG_STG_FILES := $(patsubst $(IMG_SRC_DIR)/%,$(STG_DIR)/$(IMG_DST_DIR)/%,$(IMG_SRC_FILES))

PDF_SRC_FILES := $(shell find -L $(PDF_SRC_DIR) -type f -name '*.pdf')
PDF_STG_FILES := $(patsubst $(PDF_SRC_DIR)/%,$(STG_DIR)/$(PDF_DST_DIR)/%,$(PDF_SRC_FILES))

STG_FILES := \
  $(TEX_STG_FILES) \
  $(STY_STG_FILES) \
  $(BIB_STG_FILES) \
  $(CLS_STG_FILES) \
  $(BST_STG_FILES) \
  $(IMG_STG_FILES) \
  $(PDF_STG_FILES)

SED_FILES := $(sort $(wildcard $(SED_DIR)/*.sed))

###########
# DEFAULT #
###########

.PHONY: default
default: $(CACHE_DIR)/dblp-bib $(MAIN_OUT)-$(STYLE).pdf ;

#################
# AUTOGEN FILES #
#################

$(TEX_SRC_DIR)/%$(GEN_SUFFIX).tex: $(GEN_SRC_DIR)/%.tex $(SED_FILES)
	mkdir -p $(@D)
	rm -f $@
	touch $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	cat $< >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	@echo "%% AUTO GENERATED DO NOT MODIFY THIS FILE | SOURCE = $< %%" >> $@
	for s in $(SED_FILES) ; do sed -E -i.bu -f $$s $@ ; done
	sed -E -i.bu 's/^\s*$$/\n\%\% AUTO GENERATED DO NOT MODIFY THIS FILE \%\%\n/' $@
	rm -f $@.bu

###############
# STAGE FILES #
###############

$(STG_DIR)/$(TEX_DST_DIR)/%.tex: $(TEX_SRC_DIR)/%.tex $(SED_FILES)
	mkdir -p $(@D)
	cp $< $@
	$(if $(SED_TEX),for s in $(SED_FILES) ; do sed -E -i.bu -f $$s $@ ; done)
	rm -f $@.bu

$(STG_DIR)/%.sty: $(STY_SRC_DIR)/%.sty
	mkdir -p $(@D)
	cp $< $@

$(STG_DIR)/$(BIB_DST_DIR)/$(DBLP_BIB): $(CACHE_DIR)/dblp-bib
	mkdir -p $(@D)
	cp $< $@

$(STG_DIR)/$(BIB_DST_DIR)/%.bib: $(BIB_SRC_DIR)/%.bib $(SED_FILES)
	mkdir -p $(@D)
	cp $< $@
	$(if $(SED_BIB),for s in $(SED_FILES) ; do sed -E -i.bu -f $$s $@ ; done)
	rm -f $@.bu

$(STG_DIR)/%.cls: $(CLS_SRC_DIR)/%.cls
	mkdir -p $(@D)
	cp $< $@

$(STG_DIR)/%.bst: $(BST_SRC_DIR)/%.bst
	mkdir -p $(@D)
	cp $< $@

$(STG_DIR)/$(IMG_DST_DIR)/%.jpg: $(IMG_SRC_DIR)/%.jpg
	mkdir -p $(@D)
	cp $< $@

$(STG_DIR)/$(IMG_DST_DIR)/%.png: $(IMG_SRC_DIR)/%.png
	mkdir -p $(@D)
	cp $< $@

$(STG_DIR)/$(PDF_DST_DIR)/%.pdf: $(PDF_SRC_DIR)/%.pdf
	mkdir -p $(@D)
	cp $< $@

################
# CACHED FILES #
################

$(CACHE_DIR)/dblp-list: $(CACHE_DIR)/dblp-bib ;

$(CACHE_DIR)/dblp-bib: $(TEX_SRC_FILES)
	python3 $(SCRIPTS_DIR)/dblp.py $(CACHE_DIR)/dblp-db $(CACHE_DIR)/dblp-list $(CACHE_DIR)/dblp-bib $^
	$(if $(DBLP_COPY),cp $@ $(BIB_SRC_DIR)/$(DBLP_BIB))

############
# BUILDING #
############

$(OUT_DIR)/$(STYLE)/PHASE1: $(CACHE_DIR)/dblp-list | $(STG_FILES)
	mkdir -p $(@D)
	cd $(STG_DIR) && $(LATEX) --output-directory=../$(@D) "$(LATEX_CMD)"
	touch $@

$(OUT_DIR)/$(STYLE)/PHASE2: $(OUT_DIR)/$(STYLE)/PHASE1
	mkdir -p $(@D)/$(BIB_DST_DIR)
	(cp $(STG_DIR)/$(BIB_DST_DIR)/*.bib $(@D)/$(BIB_DST_DIR)/) | true
	cd $(@D) && $(BIBTEX) $(MAIN_SRC)
	touch $@

$(OUT_DIR)/$(STYLE)/PHASE3: $(OUT_DIR)/$(STYLE)/PHASE2
	cd $(STG_DIR) && $(LATEX) --output-directory=../$(@D) "$(LATEX_CMD)"
	touch $@

$(OUT_DIR)/$(STYLE)/PHASE4: $(OUT_DIR)/$(STYLE)/PHASE3 $(STG_FILES)
	cd $(STG_DIR) && $(LATEX) --output-directory=../$(@D) "$(LATEX_CMD)"
	touch $@

$(OUT_DIR)/$(STYLE)/$(MAIN_SRC).pdf: $(OUT_DIR)/$(STYLE)/PHASE4 ;

$(MAIN_OUT)-$(STYLE).pdf: $(OUT_DIR)/$(STYLE)/$(MAIN_SRC).pdf
	cp $< $@

.PHONY: again
again:
	rm -f $(OUT_DIR)/$(STYLE)/PHASE4
	make

.PHONY: twice
twice:
	make again
	make again

.PHONY: thrice
thrice:
	make twice
	make again

.PHONY: rebib
rebib:
	rm -f $(OUT_DIR)/$(STYLE)/PHASE1
	make

##########
# STYLES #
##########

.PHONY: dev
dev:
	make STYLE=dev

.PHONY: final
final:
	make STYLE=final

.PHONY: final-anon
final-anon:
	make STYLE=final-anon

.PHONY: final-short
final-short:
	make STYLE=final-short

.PHONY: final-anon-short
final-anon-short:
	make STYLE=final-anon-short

.PHONY: all
all:
	$(foreach S,$(ALL_STYLES),make $S;)

.PHONY: clean
clean:
	rm -rf ./$(OUT_DIR)
	rm -rf ./$(STG_DIR)
	rm -f  $(patsubst %,./%,$(GEN_OUT_FILES))
	rm -f  ./$(MAIN_OUT)-*.pdf
	rm -f  ./$(CACHE_DIR)/dblp-list
	rm -f  ./$(CACHE_DIR)/dblp-bib

.PHONY: clean-cache
clean-cache:
	rm -rf ./$(CACHE_DIR)

.PHONY: clean-all
clean-all: clean-cache clean

.PHONY: debug
debug:
	@echo GEN_SRC_FILES:$(GEN_SRC_FILES)
	@echo GEN_STG_FILES:$(GEN_STG_FILES)
	
	@echo TEX_SRC_FILES:$(TEX_SRC_FILES)
	@echo TEX_STG_FILES:$(TEX_STG_FILES)
	
	@echo STY_SRC_FILES:$(STY_SRC_FILES)
	@echo STY_STG_FILES:$(STY_STG_FILES)
	
	@echo BIB_SRC_FILES:$(BIB_SRC_FILES)
	@echo BIB_STG_FILES:$(BIB_STG_FILES)
	
	@echo CLS_SRC_FILES:$(CLS_SRC_FILES)
	@echo CLS_STG_FILES:$(CLS_STG_FILES)
	
	@echo BST_SRC_FILES:$(BST_SRC_FILES)
	@echo BST_STG_FILES:$(BST_STG_FILES)
	
	@echo IMG_SRC_FILES:$(IMG_SRC_FILES)
	@echo IMG_STG_FILES:$(IMG_STG_FILES)
	
	@echo PDF_SRC_FILES:$(PDF_SRC_FILES)
	@echo PDF_STG_FILES:$(PDF_STG_FILES)
